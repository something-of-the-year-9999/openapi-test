Oauth2Authorize:
  # /oauth2/authorize
  # This endpoint is originally intended to be defined on the authorization server, not the resource server.
  get:
    # In Resource Owner Password Credentials Grant, this request is not executed because the client directly obtains resource owner's credentials.
    # In Client Credentials Grant, this request is not executed because the client authentication is used as the authorization grant.
    tags:
      - oauth2
    summary: Resource Owner Authorization Request
    description: Initiates the authorization process by redirecting the resource owner to authenticate and consent.
    operationId: getOAuth2Authorize
    parameters:
      - name: response_type
        in: query
        description: |-
            The entity to be retrieved in this request.
            - Authorization Code Grant: `code`
            - Implicit Grant: `token`
        required: true
        schema:
          type: string
          enum:
            - code
            - token
          nullable: false
          example: code
      - name: client_id
        in: query
        description: Client Identifier
        required: true
        schema:
          $ref: "../components/schemas/auth.yml#/ClientId"
      - name: redirect_uri
        in: query
        description: |-
            - The URI for the client application to receive redirects from the authorization server.  
            This URI is a pre-registered redirect destination for the client and is used as the location to receive the authorization code.
            - If the redirect URI is fixed when the client is registered with the authorization server, this parameter does not need to be included.  
            However, if multiple redirect URIs are registered with the authorization server, this parameter must be included.
        required: false
        schema:
          $ref: "../components/schemas/auth.yml#/RedirectUri"
      - $ref: "../components/parameters/auth.yml#/Scope"
      - name: state
        in: query
        description: |-
            An opaque value used by the client to maintain state between the request and callback.  
            The authorization server includes this value when redirecting the user-agent back to the client.
        required: false
        schema:
          type: string
          nullable: false
          example: xyz
      - $ref: "../components/parameters/auth.yml#/CodeChallenge"
      - $ref: "../components/parameters/auth.yml#/CodeChallengeMethod"
    responses:
      "302":
        description: Found
        headers:
          Location:
            description: |-
                The redirect URI with the following query params added.  
                However, in Implicit Grant, a hash fragment is used instead of query params to mitigate security risks.
                - Common
                  - `state`: Rquired if the query param with same name was present in the request.  
                  The exact value received from the client.
                - Authorization Response
                  - `code`: Required.  
                  The authorization code generated by the authorization server.
                - Access Token Response  
                Refer to the response body of Access Token Issue Request.  
                However, a refresh token will not be issued to mitigate security risks.
                - Error Response
                  - `error`: Required.  
                  A single error code from the following.
                    - `invalid_request`: The request is malformed.
                    - `unauthorized_client`: The client is not authorized to request an authorization code using this method.
                    - `access_denied`: The resource owner or authorization server denied the request.
                    - `unsupported_response_type`: The authorization server does not support obtaining an authorization code using this method.
                    - `invalid_scope`: The requested scope is invalid, unknown, or malformed.
                    - `server_error`: The authorization server encountered an unexpected condition.
                    - `temporarily_unavailable`: The authorization server is temporarily overloaded or under maintenance.
                  - `error_description`: Optional.  
                  Human-readable text providing additional info.
                  - `error_uri`: Optional.  
                  A URI identifying a human-readable web page with information about the error.
            required: true
            schema:
              type: string
              nullable: false
            examples:
              authorization:
                summary: Authorization Response
                value: >-
                  https://example.com/client/callback
                  ?code=SplxlOBeZQQYbYS6WxSbIA
                  &state=xyz
              access_token:
                summary: Access Token Response
                value: >-
                  https://example.com/client/callback
                  #access_token=2YotnFZFEjr1zCsicMWpAA
                  &token_type=bearer
                  &expires_in=3600
                  &state=xyz
              error:
                summary: Error Response
                value: >-
                  https://client.example.com/callback
                  ?error=access_denied
                  &error_description=The+resource+owner+denied+the+request.
                  &error_uri=https%3A%2F%2Fexample.com%2Fdocs%2Ferrors%2Faccess_denied
                  &state=xyz
      "400":
        $ref: "../components/responses/error.yml#/400"

Oauth2Token:
  # /oauth2/token
  post:
    # In Implicit Grant, this request is not executed because an access token is obtained with an authorization request.
    tags:
      - oauth2
    summary: Token Issue Request
    description: |-
        This request allows clients to request an Access Token.  
        This token is used to access protected resources on behalf of the client.
    operationId: postOAuth2Token
    security:
      - BasicAuth: []
    requestBody:
      description: |-
          - *code* is required if *grant_type* is `authorization_code`.
          - *redirect_uri* is used only if *grant_type* is `authorization_code`.
          - *redirect_uri* is required if a prop with the same name is included in the authorization request and their values need to be identical.
          - *client_id* is required if the client is not authenticating with the authorization server or *grant_type* is `authorization_code`.
          - *client_secret* is used only if *grant_type* is `authorization_code`.
          - *client_secret* is required if the client is not authenticating with the authorization server.  
          However, if the value is an empty, the client can omit it.
          - *code_verifier* is required if *grant_type* is `authorization_code`.
          - *username* is required if *grant_type* is `password`.
          - *password* is required if *grant_type* is `password`.
          - *refresh_token* is required if *grant_type* is `refresh_token`.
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              grant_type:
                description: |-
                    Prop Usage Location
                    - `authorization_code`: [Authorization Code Grant](https://datatracker.ietf.org/doc/html/rfc6749#section-4.1)
                    - `password`: [Resource Owner Password Credentials Grant](https://datatracker.ietf.org/doc/html/rfc6749#section-4.3)
                    - `client_credentials`: [Client Credentials Grant](https://datatracker.ietf.org/doc/html/rfc6749#section-4.4)
                    - `refresh_token`: [Refreshing an Access Token](https://datatracker.ietf.org/doc/html/rfc6749#section-6)
                type: string
                enum:
                  - authorization_code
                  - password
                  - client_credentials
                  - refresh_token
                example: authorization_code
              code:
                description: The authorization code received from the authorization server.
                type: string
                example: SplxlOBeZQQYbYS6WxSbIA
              redirect_uri:
                $ref: "../components/schemas/auth.yml#/RedirectUri"
              client_id:
                $ref: "../components/schemas/auth.yml#/ClientId"
              client_secret:
                $ref: "../components/schemas/auth.yml#/ClientSecret"
              code_verifier:
                $ref: "../components/schemas/auth.yml#/CodeVerifier"
              username:
                $ref: "../components/schemas/auth.yml#/Username"
              password:
                allOf:
                  - $ref: "../components/schemas/common.yml#/Password"
                  - description: The resource owner password.
                  - nullable: false
              refresh_token:
                $ref: "../components/schemas/auth.yml#/RefreshToken"
            required:
              - grant_type
    responses:
      "200":
        description: OK
        content:
            application/json:
              schema:
                description: |-
                    - *scope* can be omitted only if it is identical to what was requested by the client.
                type: object
                properties:
                  access_token:
                    allOf:
                      - $ref: "../components/schemas/auth.yml#/JWT"
                      - nullable: false
                  token_type:
                    $ref: "../components/schemas/auth.yml#/TokenType"
                  expires_in:
                    description: The lifetime in seconds of the access token.
                    type: int
                    format: int32
                    nullable: false
                    example: 3600
                  refresh_token:
                    $ref: "../components/schemas/auth.yml#/RefreshToken"
                  scope:
                    $ref: "../components/schemas/auth.yml#/Scope"
                required:
                  - access_token
                  - token_type
              externalDocs:
                descriptopn: RFC 6749 - The OAuth 2.0 Authorization Framework
                url: https://datatracker.ietf.org/doc/html/rfc6749#section-5.1
        links:
          revokeAccessToken:
            operationId: postOAuth2Revoke
            requestBody:
              token: $response.body#/access_token
          revokeRefreshToken:
            operationId: postOAuth2Revoke
            requestBody:
              token: $response.body#/refresh_token
      "400":
        $ref: "../components/responses/error.yml#/400"
      "401":
        $ref: "../components/responses/error.yml#/401"
    externalDocs:
      descriptopn: RFC 6749 - The OAuth 2.0 Authorization Framework
      url: https://datatracker.ietf.org/doc/html/rfc6749

Oauth2Revoke:
  # /oauth2/revoke
  post:
    tags:
      - oauth2
    summary: Token Revocation Request
    description: |-
        This request actively revokes a Token.  
        This approach provides an additional layer of control over issued tokens.
    operationId: postOAuth2Revoke
    security:
      - BasicAuth: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              token:
                allOf:
                  - oneOf:
                    - allOf:
                      - description: The access token to be revoked.
                      - $ref: "../components/schemas/auth.yml#/JWT"
                    - allOf:
                      - description: The refresh token to be revoked.
                      - $ref: "../components/schemas/auth.yml#/RefreshToken"
                  - nullable: false
              token_type_hint:
                $ref: "../components/schemas/auth.yml#/TokenTypeHint"
            required:
              - token
    responses:
      "204":
        description: No Content
      "400":
        $ref: "../components/responses/error.yml#/400"
      "401":
        $ref: "../components/responses/error.yml#/401"
    externalDocs:
      descriptopn: RFC 7009 - OAuth 2.0 Token Revocation
      url: https://datatracker.ietf.org/doc/html/rfc7009#section-2.1

Oauth2Introspect:
  # /oauth2/introspect
  post:
    tags:
      - oauth2
    summary: Token Introspection Request
    description: |-
        This request accepts a token and returns information about its validity and associated metadata.  
        To avoid disclosing too much of the authorization server's state to a third party, no additional info about an inactive token is returned.
    operationId: postOAuth2Introspect
    security:
      - BasicAuth: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              token:
                allOf:
                  - oneOf:
                    - allOf:
                      - description: The access token to be revoked.
                      - $ref: "../components/schemas/auth.yml#/JWT"
                    - allOf:
                      - description: The refresh token to be revoked.
                      - $ref: "../components/schemas/auth.yml#/RefreshToken"
                  - nullable: false
              token_type_hint:
                $ref: "../components/schemas/auth.yml#/TokenTypeHint"
            required:
              - token
    responses:
      "200":
        description: OK
        content:
            application/json:
              schema:
                description: |-
                    - If the token is not active, properties other than `active` are not included in the response body.
                    - *scope* can be omitted only if it is identical to what was requested by the client.
                type: object
                properties:
                  active:
                    description: Indicator of whether or not the presented token is currently active.
                    type: boolean
                    nullable: false
                    example: true
                  scope:
                    $ref: "../components/schemas/auth.yml#/Scope"
                  client_id:
                    $ref: "../components/schemas/auth.yml#/ClientId"
                  username:
                    $ref: "../components/schemas/auth.yml#/Username"
                  token_type:
                    $ref: "../components/schemas/auth.yml#/TokenType"
                  exp:
                    $ref: "../components/schemas/auth.yml#/EXP"
                  iat:
                    $ref: "../components/schemas/auth.yml#/IAT"
                  nbf:
                    $ref: "../components/schemas/auth.yml#/NBF"
                  sub:
                    $ref: "../components/schemas/auth.yml#/SUB"
                  aud:
                    $ref: "../components/schemas/auth.yml#/AUD"
                  iss:
                    $ref: "../components/schemas/auth.yml#/ISS"
                  jti:
                    $ref: "../components/schemas/auth.yml#/JTI"
                required:
                  - active
      "400":
        $ref: "../components/responses/error.yml#/400"
      "401":
        $ref: "../components/responses/error.yml#/401"
    externalDocs:
      descriptopn: RFC 7662 - OAuth 2.0 Token Introspection
      url: https://datatracker.ietf.org/doc/html/rfc7662
